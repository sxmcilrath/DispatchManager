@namespace DispatchManager.Components


@if (trips is not null && trips.Rows.Count > 0)
{
    <table>
        <thead>
            <tr>
                <th>Truck ID</th>
                <th>Destination</th>
                <th>Travel Time (hrs)</th>
                <th>Travel Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in trips.Rows)
            {
                <tr>
                    <td>@row["truckid"]</td>
                    <td>@row["destname"]</td>
                    <td>@row["traveltime"]</td>
                    <td>@DateTime.Parse(row["traveldate"].ToString()).ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (trips is not null && trips.Rows.Count == 0)
{
    <p>No recent trips found for this driver.</p>
}
else
{
    <p>Loading recent trips...</p>
}

@code {
    [Parameter]
    public string driverID { get; set; }

    private DataTable trips;

    protected override async Task OnInitializedAsync()
    {
        await GetTrips();
    }

    private async Task GetTrips()
    {
        string query = @"
            SELECT
                dt.truckid,
                d.destname,
                dt.traveltime,
                dt.traveldate
            FROM drivesto dt
            JOIN truck t ON t.truckid = dt.truckid
            JOIN destination d ON d.destcoordinates = dt.destcoordinates
            WHERE t.ownerid = @driverID
            AND dt.traveldate >= CURDATE() - INTERVAL 7 DAY";

        trips = await DatabaseService.ExecuteQueryAsync(query, new MySqlParameter("@driverID", driverID));
    }
}
