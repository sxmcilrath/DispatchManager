@page "/mechanic-dashboard"
@rendermode InteractiveServer

<div class="MD-Header">
    <h3 class="MD-Title">Mechanic Dashboard</h3>
    <div class="MD-Header-Buttons">
        <button class="MD-Hire-Button" @onclick="() => hireMechPopup = !hireMechPopup">Hire Mechanic</button>
        <button class="MD-Generate-Report-Button" @onclick="() => reportPopup = !reportPopup">Generate Report</button>
        <button class="MD-Back-Button" @onclick="NavigateToHome">Back</button>
    </div>
</div>

@if (hireMechPopup)
{
    <div class="MD-Overlay" @onclick="() => hireMechPopup = false">
        <div class="MD-Popup" @onclick:stopPropagation>
            <p>New Hire Info</p>
            <HireMechanic OnHireComplete="OnHireComplete" />
        </div>
    </div>
}

@if (reportPopup)
{
    <div class="MD-Overlay" @onclick="() => reportPopup = false">
        <div class="MD-Popup" @onclick:stopPropagation>
            <Repairs/>
            <MechanicLeaderboard/>
        </div>
    </div>
}

<!-- Mechanic List -->
<div class="MD-Mechanic-List-Container">
    @foreach (DataRow row in mechanics.Rows)
    {
        <div class="MD-Mechanic-Card">
            <div class="MD-Mechanic-Info">
                <p><strong>ID:</strong> @row["mechid"]</p>
                <p><strong>Name:</strong> @row["mechfname"] @row["mechlname"]</p>
                @if (row["yearsofexperience"] != null)
                {
                    <p><strong>Experience:</strong> @row["yearsofexperience"] years</p>
                }
            </div>
            <div class="MD-Mechanic-Actions">
                <AssignMechanic mechID="@row["mechid"].ToString()"/>
                <DeleteMechanic mechid="@row["mechid"].ToString()" OnDeleteComplete="OnHireComplete" />
            </div>
        </div>
    }
</div>

@code {
    private bool hireMechPopup = false;
    private bool reportPopup = false;

    private DataTable mechanics;

    protected override async Task OnInitializedAsync()
    {
        string query = "SELECT * FROM mechanic";

        mechanics = DatabaseService.ExecuteQuery(query); // store mechanics
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
    }

    private async Task OnHireComplete()
    {
        hireMechPopup = false; // Close overlay
        await OnInitializedAsync(); // Refresh the mechanic list
    }


}
