@page "/mechanic-dashboard"
@rendermode InteractiveServer

<h3>Mechanic Dashboard</h3>

<!--Hire Mechanic-->
<button @onclick="() => hireMechPopup = !hireMechPopup">Hire Mechanic</button>
@if (hireMechPopup)
{
	<p>rets true</p>
	<HireMechanic/>
}

<!--Generate Report-->
<button @onclick="() => reportPopup = !reportPopup">Generate Report</button>
@if (reportPopup)
{
	<div class="MD-Report-Container">
		<Repairs></Repairs>
	</div>
}
<!--New Repair -->
<button @onclick="() => newRepairPopup = !newRepairPopup"></button>
@if (newRepairPopup)
{
	
}
<!--Mechanic List-->
<div class="MD-Mechanic-List-Container">
	@foreach(DataRow row in mechanics.Rows)
	{
		<div class="MD-Mechanic-List-Info-Container">
			<p>ID : @row["mechid"]</p>
			<p>Name: @row["mechfname"] @row["mechlname"]</p>
			@if(row["yearsofexperience"] != null)
			{
				<p>experience: @row["yearsofexperience"] </p>
			}
		</div>
		<div class="MD-Mechanic-List-Button-Container"> 
			<DeleteMechanic mechid="@row["mechid"].ToString()"/>
		</div>
	}
</div>

@code {
	private bool hireMechPopup = false;
	private bool reportPopup = false;
	private bool newRepairPopup = false;

	private DataTable mechanics;
	protected override async Task OnInitializedAsync()
	{
		string query = "SELECT * FROM mechanic";

		mechanics =  DatabaseService.ExecuteQuery(query); //store mechs 

	}

}
