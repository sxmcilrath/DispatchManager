@page "/driver-dashboard"
@rendermode InteractiveServer
<PageTitle>Driver Dashboard</PageTitle>

<!--Header-->
<div class="DD-Header">
	<h3>Driver Dashboard</h3>
	<DeleteDriver driverID="@driverID"/>
	
</div>
<button class="DD-back-button" @onclick="BackToDriverLogin">Back</button>


<div class="DD-Welcome">
	<h2>Welcome @driverName</h2>
	<button @onclick="() => editNamePopup = !editNamePopup"> Edit Name</button>
</div>

<!--Function Buttons-->
<div class="DD-Functions">
	<button class="btn btn-primary mt-2">Reccomend Truck</button>
</div>

<!--Edit Name Popup-->
@if (editNamePopup)
{
	<UpdateDriverName driverID="@driverID" driverName="@driverName" onEditComplete="HandleEditComplete" />
}
@code {

	private string driverName;
	private string newName;
	private string driverID;

	private bool editNamePopup = false;

	//initialize dashboard
	protected override async Task OnInitializedAsync()
	{
		//parse the uri
		var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
		var queryParameters = System.Web.HttpUtility.ParseQueryString(uri.Query);

		// Extract the driverID from the query parameters
		driverID = queryParameters["driverID"];

		//query for driver name
		string query = "SELECT drivername FROM driver WHERE driverid = @driverID";
		DataTable result = await DatabaseService.ExecuteQueryAsync(query, new MySqlParameter("@driverID", driverID));

		//check if valid driver ID
		driverName = result.Rows[0]["drivername"].ToString(); //probably this
	}
	private void BackToDriverLogin()
	{
		Navigation.NavigateTo("/driver-login");
	} 

	private async Task HandleEditComplete(bool completed)
	{
		if (completed)
		{
			await OnInitializedAsync();

			editNamePopup = false;
		}
	}

}
